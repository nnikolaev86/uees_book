%% ПРИМЕР 4: Устойчивост при малки смущения на модел от 2-ри ред при зададено Eq_prim
clear all; clc; close all;
fprintf('ПРИМЕР 4: Устойчивост при малки смущения на модел от 2-ри ред при зададено Eq_prim\n')

%% Входни данни

% Режимни параметри на генератора и системата
Eq0_prim     = 1.1421;
P1     = 0.95;

U2     = 1.0;
theta2 = 0; % ъгълът на системата е нула затова ще се пропуска надолу в уравненията

% Номинална кръгова честота
w0 = 2*pi*50; % rad/s

% Параметри на генератора за модел от 2-ри ред
Sn = 500; % MVA
H = 3.0;
Xd_prim  = 0.3;

% Собствени и взаимни проводимости с включен генераторен импеданс
% (изчислени са със скрипт Example_03_compute_admitances.m)
Y11g  = 0.0574 -1.4932i ;
Y22g  = 0.0945 -1.7760i ;
Y12g  = 0.0335 -1.4191i ;
Y21g  = Y12g ;

alpha_11g = pi/2 + angle(Y11g);
alpha_22g = pi/2 + angle(Y22g);
alpha_12g = pi/2 + angle(Y12g);
alpha_21g = pi/2 + angle(Y21g);

% Коеф. за преобразуване от RAD в DEG
toDeg = 180/pi; 

%% b) Установен режим на генераторния модел от 2-ри ред
fprintf('\nb) Установен режим на генераторния модел от 2-ри ред\n')

% Роторният ъгъл този път се изчислява с ъгловата характеристика
delta0 = asin( (P1 - (Eq0_prim^2)*abs(Y11g)*sin(alpha_11g))/(Eq0_prim*U2*abs(Y12g)) ) + alpha_12g;
fprintf('delta0 = %0.4f deg\n', delta0 * toDeg)

Pm0 = P1;
fprintf('Pm0 = %0.4f pu\n', Pm0)

%% c) Линеаризиране на модела
fprintf('\nc) Линеаризиране на модела\n')

Ks = Eq0_prim*U2*abs(Y12g)*cos(delta0 - alpha_12g);
Kd = Pm0;

fprintf('Ks = %0.4f pu-в.момент/rad\n', Ks)
fprintf('Kd = %0.4f pu-в.момент/pu-скорост\n', Kd)

A = [        0,        w0;
     -Ks/(2*H), -Kd/(2*H)  ];

B = [     0;
     1/(2*H) ];

C = [1, 0;
     0, 1 ];
 
D = [0;
     0 ];

% Създаване на модел в пространство на състоянията
lin_model = ss(A, B, C, D);

% Задаване имената на входовете, изходите и променливите на състоянието
lin_model.StateName  = {'delta','w'};
lin_model.OutputName = {'delta','w'};
lin_model.InputName  = {'Pm'};

% Принтиране на модела
lin_model

%% d) Анализ на устойчивостта
fprintf('\nd) Анализ на устойчивостта\n')

% Корени
lambda = eig(A)

% Естествена недемпфирана честота
wn = sqrt(Ks*w0/(2*H));
fprintf('Естествена недемпфирана честота wn = %0.4f rad/s\n', wn)

% Декремент на затихване
xi = 0.5*Kd/sqrt(Ks*2*H*w0);
fprintf('Декремент на затихване xi = %0.4f \n', xi)

% Честота на колебанията
w = imag( lambda(1) );
fprintf('Честота на колебанията w = %0.4f rad/s = %0.4f Hz\n', w, w/(2*pi) )


